
-----------终结符表:
#0$	#1import	#2.	#3;	#4id	#5comma	
#6=	#7static	#8(	#9)	#10void	#11...	
#12{	#13}	#14struct	#15union	#16typedef	#17[	
#18]	#19INTEGER	#20*	#21-=	#22signed	#23unsigned	
#24char	#25if	#26else	#27while	#28do	#29for	
#30break	#31goto	#32continue	#33return	#34:	#35case	
#36defult	#37switch	#38?	#39||	#40&&	#41==	
#42!=	#43<	#44>	#45<=	#46>=	#47<<	
#48>>	#49+	#50-	#51/	#52%	#53++	
#54--	#55SIZEOF	#56!	#57~	#58&	#59->	
#60CHARACTOR	#61STRING	#62FLOAT	#63+=	#64*=	#65/=	
#66%=	#67const	#68bool	#69float	#70double	#71long	
#72short	#73int	#74extern	#-1ε	
-----------非终结符表:
#0programe	#1import_staments	#2import_stament	#3NAME	#4name	#5top_decls	
#6top_decl	#7defvars	#8other_vars	#9other_var	#10initial_expr	#11storage	
#12defun	#13params	#14fixed_params	#15param	#16kwargs	#17block	
#18block_componets	#19defstruct	#20defunion	#21member_list	#22slots	#23TYPEDEF	
#24type	#25type_postfix	#26param_typerefs	#27fixed_param_ref	#28opassign_op	#29primary_type	
#30stmts	#31stmt	#32if_stmt	#33while_stmt	#34dowhile_stmt	#35for_stmt	
#36optional_for_expr	#37break_stmt	#38goto_stmt	#39continue_stmt	#40return_stmt	#41label_stmt	
#42switch_stmt	#43label_stmts	#44expr	#45conditional_expr	#46logical_or_expr	#47logical_and_expr	
#48equality_expr	#49relational_expr	#50shift_expr	#51additive_expr	#52multiplicative_expr	#53term	
#54unary_expr	#55unary_operator	#56postfix_expr	#57primary_expr	#58CONSTANT	#59defconst	
#60args	#61int_type	#62block_componet	#63forIniitialer	#64optional_for_exprs	#65expr_list	
#66typeName	#67fun_decl	#68param_decl	#69var_decl	#70other_var_decls	#71other_var_decl	
*********语法分析开始*********
行号   回合  栈的内容                                                                                             当前状态       输入流符号           动作                 
1    #1   [$]                                                                                                  0          import          根据import_staments-> 规约 
1    #2   [$, import_staments]                                                                                 1          import          移入import           
1    #3   [$, import_staments, import]                                                                         4          id              移入id               
1    #4   [$, import_staments, import, id]                                                                     8          ;               根据name-> id 规约     
1    #5   [$, import_staments, import, name]                                                                   6          ;               移入;                
3    #6   [$, import_staments, import, name, ;]                                                                23         void            根据NAME-> name ; 规约 
3    #7   [$, import_staments, import, NAME]                                                                   7          void            根据import_stament-> import NAME 规约 
3    #8   [$, import_staments, import_stament]                                                                 3          void            根据import_staments-> import_staments import_stament 规约 
3    #9   [$, import_staments]                                                                                 1          void            根据top_decls-> 规约   
3    #10  [$, import_staments, top_decls]                                                                      5          void            根据storage-> 规约     
3    #11  [$, import_staments, top_decls, storage]                                                             12         void            移入void             
3    #12  [$, import_staments, top_decls, storage, void]                                                       32         id              根据primary_type-> void 规约 
3    #13  [$, import_staments, top_decls, storage, primary_type]                                               30         id              根据type_postfix-> 规约 
3    #14  [$, import_staments, top_decls, storage, primary_type, type_postfix]                                 50         id              根据type-> primary_type type_postfix 规约 
3    #15  [$, import_staments, top_decls, storage, type]                                                       36         id              移入id               
3    #16  [$, import_staments, top_decls, storage, type, id]                                                   8          (               根据name-> id 规约     
3    #17  [$, import_staments, top_decls, storage, type, name]                                                 52         (               移入(                
3    #18  [$, import_staments, top_decls, storage, type, name, (]                                              66         void            移入void             
3    #19  [$, import_staments, top_decls, storage, type, name, (, void]                                        82         )               根据params-> void 规约 
3    #20  [$, import_staments, top_decls, storage, type, name, (, params]                                      85         )               移入)                
3    #21  [$, import_staments, top_decls, storage, type, name, (, params, )]                                   131        {               移入{                
4    #22  [$, import_staments, top_decls, storage, type, name, (, params, ), {]                                187        int             根据block_componets-> 规约 
4    #23  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets]               224        int             根据storage-> 规约     
4    #24  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage]      235        int             移入int              
4    #25  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, int] 31         [               根据int_type-> int 规约 
4    #26  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, int_type] 26         [               根据primary_type-> int_type 规约 
4    #27  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, primary_type] 30         [               根据type_postfix-> 规约 
4    #28  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, primary_type, type_postfix] 50         [               移入[                
4    #29  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, primary_type, type_postfix, [] 65         INTEGER         移入INTEGER          
4    #30  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, primary_type, type_postfix, [, INTEGER] 80         ]               移入]                
4    #31  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, primary_type, type_postfix, [, INTEGER, ]] 127        [               根据type_postfix-> type_postfix [ INTEGER ] 规约 
4    #32  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, primary_type, type_postfix] 50         [               移入[                
4    #33  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, primary_type, type_postfix, [] 65         INTEGER         移入INTEGER          
4    #34  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, primary_type, type_postfix, [, INTEGER] 80         ]               移入]                
4    #35  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, primary_type, type_postfix, [, INTEGER, ]] 127        id              根据type_postfix-> type_postfix [ INTEGER ] 规约 
4    #36  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, primary_type, type_postfix] 50         id              根据type-> primary_type type_postfix 规约 
4    #37  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, type] 266        id              移入id               
4    #38  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, type, id] 8          ;               根据name-> id 规约     
4    #39  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, type, name] 281        ;               根据initial_expr-> 规约 
4    #40  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, type, name, initial_expr] 67         ;               根据other_vars-> 规约  
4    #41  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, type, name, initial_expr, other_vars] 86         ;               移入;                
5    #42  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, type, name, initial_expr, other_vars, ;] 132        int             根据defvars-> storage type name initial_expr other_vars ; 规约 
5    #43  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, defvars]      247        int             根据block_componet-> defvars 规约 
5    #44  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, block_componet] 237        int             根据block_componets-> block_componets block_componet 规约 
5    #45  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets]               224        int             根据storage-> 规约     
5    #46  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage]      235        int             移入int              
5    #47  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, int] 31         id              根据int_type-> int 规约 
5    #48  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, int_type] 26         id              根据primary_type-> int_type 规约 
5    #49  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, primary_type] 30         id              根据type_postfix-> 规约 
5    #50  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, primary_type, type_postfix] 50         id              根据type-> primary_type type_postfix 规约 
5    #51  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, type] 266        id              移入id               
5    #52  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, type, id] 8          =               根据name-> id 规约     
5    #53  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, type, name] 281        =               移入=                
5    #54  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, type, name, =] 68         INTEGER         移入INTEGER          
5    #55  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, type, name, =, INTEGER] 116        ;               根据CONSTANT-> INTEGER 规约 
5    #56  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, type, name, =, CONSTANT] 114        ;               根据primary_expr-> CONSTANT 规约 
5    #57  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, type, name, =, primary_expr] 115        ;               根据postfix_expr-> primary_expr 规约 
5    #58  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, type, name, =, postfix_expr] 111        ;               根据unary_expr-> postfix_expr 规约 
5    #59  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, type, name, =, unary_expr] 99         ;               根据term-> unary_expr 规约 
5    #60  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, type, name, =, term] 93         ;               根据multiplicative_expr-> term 规约 
5    #61  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, type, name, =, multiplicative_expr] 95         ;               根据additive_expr-> multiplicative_expr 规约 
5    #62  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, type, name, =, additive_expr] 88         ;               根据shift_expr-> additive_expr 规约 
5    #63  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, type, name, =, shift_expr] 97         ;               根据relational_expr-> shift_expr 规约 
5    #64  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, type, name, =, relational_expr] 91         ;               根据equality_expr-> relational_expr 规约 
5    #65  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, type, name, =, equality_expr] 90         ;               根据logical_and_expr-> equality_expr 规约 
5    #66  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, type, name, =, logical_and_expr] 102        ;               根据logical_or_expr-> logical_and_expr 规约 
5    #67  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, type, name, =, logical_or_expr] 92         ;               根据conditional_expr-> logical_or_expr 规约 
5    #68  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, type, name, =, conditional_expr] 110        ;               根据expr-> conditional_expr 规约 
5    #69  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, type, name, =, expr] 101        ;               根据initial_expr-> = expr 规约 
5    #70  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, type, name, initial_expr] 67         ;               根据other_vars-> 规约  
5    #71  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, type, name, initial_expr, other_vars] 86         ;               移入;                
6    #72  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, storage, type, name, initial_expr, other_vars, ;] 132        for             根据defvars-> storage type name initial_expr other_vars ; 规约 
6    #73  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, defvars]      247        for             根据block_componet-> defvars 规约 
6    #74  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, block_componet] 237        for             根据block_componets-> block_componets block_componet 规约 
6    #75  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets]               224        for             移入for              
6    #76  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for]          252        (               移入(                
6    #77  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (]       274        id              移入id               
6    #78  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, id]   113        =               根据primary_expr-> id 规约 
6    #79  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, primary_expr] 115        =               根据postfix_expr-> primary_expr 规约 
6    #80  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, postfix_expr] 111        =               根据unary_expr-> postfix_expr 规约 
6    #81  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, unary_expr] 99         =               根据term-> unary_expr 规约 
6    #82  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, term] 93         =               移入=                
6    #83  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, term, =] 152        INTEGER         移入INTEGER          
6    #84  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, term, =, INTEGER] 116        ;               根据CONSTANT-> INTEGER 规约 
6    #85  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, term, =, CONSTANT] 114        ;               根据primary_expr-> CONSTANT 规约 
6    #86  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, term, =, primary_expr] 115        ;               根据postfix_expr-> primary_expr 规约 
6    #87  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, term, =, postfix_expr] 111        ;               根据unary_expr-> postfix_expr 规约 
6    #88  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, term, =, unary_expr] 99         ;               根据term-> unary_expr 规约 
6    #89  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, term, =, term] 93         ;               根据multiplicative_expr-> term 规约 
6    #90  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, term, =, multiplicative_expr] 95         ;               根据additive_expr-> multiplicative_expr 规约 
6    #91  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, term, =, additive_expr] 88         ;               根据shift_expr-> additive_expr 规约 
6    #92  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, term, =, shift_expr] 97         ;               根据relational_expr-> shift_expr 规约 
6    #93  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, term, =, relational_expr] 91         ;               根据equality_expr-> relational_expr 规约 
6    #94  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, term, =, equality_expr] 90         ;               根据logical_and_expr-> equality_expr 规约 
6    #95  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, term, =, logical_and_expr] 102        ;               根据logical_or_expr-> logical_and_expr 规约 
6    #96  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, term, =, logical_or_expr] 92         ;               根据conditional_expr-> logical_or_expr 规约 
6    #97  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, term, =, conditional_expr] 110        ;               根据expr-> conditional_expr 规约 
6    #98  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, term, =, expr] 204        ;               根据expr-> term = expr 规约 
6    #99  [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, expr] 288        ;               根据optional_for_expr-> expr 规约 
6    #100 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, optional_for_expr] 287        ;               根据optional_for_exprs-> optional_for_expr 规约 
6    #101 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, optional_for_exprs] 289        ;               移入;                
6    #102 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, optional_for_exprs, ;] 298        id              根据forIniitialer-> optional_for_exprs ; 规约 
6    #103 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer] 290        id              移入id               
6    #104 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, id] 113        <               根据primary_expr-> id 规约 
6    #105 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, primary_expr] 115        <               根据postfix_expr-> primary_expr 规约 
6    #106 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, postfix_expr] 111        <               根据unary_expr-> postfix_expr 规约 
6    #107 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, unary_expr] 99         <               根据term-> unary_expr 规约 
6    #108 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, term] 93         <               根据multiplicative_expr-> term 规约 
6    #109 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, multiplicative_expr] 95         <               根据additive_expr-> multiplicative_expr 规约 
6    #110 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, additive_expr] 88         <               根据shift_expr-> additive_expr 规约 
6    #111 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, shift_expr] 97         <               根据relational_expr-> shift_expr 规约 
6    #112 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, relational_expr] 91         <               移入<                
6    #113 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, relational_expr, <] 143        INTEGER         移入INTEGER          
6    #114 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, relational_expr, <, INTEGER] 116        ;               根据CONSTANT-> INTEGER 规约 
6    #115 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, relational_expr, <, CONSTANT] 114        ;               根据primary_expr-> CONSTANT 规约 
6    #116 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, relational_expr, <, primary_expr] 115        ;               根据postfix_expr-> primary_expr 规约 
6    #117 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, relational_expr, <, postfix_expr] 111        ;               根据unary_expr-> postfix_expr 规约 
6    #118 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, relational_expr, <, unary_expr] 99         ;               根据term-> unary_expr 规约 
6    #119 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, relational_expr, <, term] 190        ;               根据multiplicative_expr-> term 规约 
6    #120 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, relational_expr, <, multiplicative_expr] 95         ;               根据additive_expr-> multiplicative_expr 规约 
6    #121 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, relational_expr, <, additive_expr] 88         ;               根据shift_expr-> additive_expr 规约 
6    #122 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, relational_expr, <, shift_expr] 197        ;               根据relational_expr-> relational_expr < shift_expr 规约 
6    #123 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, relational_expr] 91         ;               根据equality_expr-> relational_expr 规约 
6    #124 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, equality_expr] 90         ;               根据logical_and_expr-> equality_expr 规约 
6    #125 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, logical_and_expr] 102        ;               根据logical_or_expr-> logical_and_expr 规约 
6    #126 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, logical_or_expr] 92         ;               根据conditional_expr-> logical_or_expr 规约 
6    #127 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, conditional_expr] 110        ;               根据expr-> conditional_expr 规约 
6    #128 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, expr] 288        ;               根据optional_for_expr-> expr 规约 
6    #129 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr] 300        ;               移入;                
6    #130 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;] 307        id              移入id               
6    #131 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, id] 113        ++              根据primary_expr-> id 规约 
6    #132 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, primary_expr] 115        ++              根据postfix_expr-> primary_expr 规约 
6    #133 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, postfix_expr] 111        ++              移入++               
6    #134 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, postfix_expr, ++] 169        )               根据postfix_expr-> postfix_expr ++ 规约 
6    #135 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, postfix_expr] 111        )               根据unary_expr-> postfix_expr 规约 
6    #136 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, unary_expr] 99         )               根据term-> unary_expr 规约 
6    #137 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, term] 93         )               根据multiplicative_expr-> term 规约 
6    #138 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, multiplicative_expr] 95         )               根据additive_expr-> multiplicative_expr 规约 
6    #139 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, additive_expr] 88         )               根据shift_expr-> additive_expr 规约 
6    #140 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, shift_expr] 97         )               根据relational_expr-> shift_expr 规约 
6    #141 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, relational_expr] 91         )               根据equality_expr-> relational_expr 规约 
6    #142 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, equality_expr] 90         )               根据logical_and_expr-> equality_expr 规约 
6    #143 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, logical_and_expr] 102        )               根据logical_or_expr-> logical_and_expr 规约 
6    #144 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, logical_or_expr] 92         )               根据conditional_expr-> logical_or_expr 规约 
6    #145 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, conditional_expr] 110        )               根据expr-> conditional_expr 规约 
6    #146 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, expr] 288        )               根据optional_for_expr-> expr 规约 
6    #147 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_expr] 287        )               根据optional_for_exprs-> optional_for_expr 规约 
6    #148 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs] 313        )               移入)                
6    #149 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, )] 318        {               移入{                
7    #150 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {] 187        int             根据block_componets-> 规约 
7    #151 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets] 224        int             根据storage-> 规约     
7    #152 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, storage] 235        int             移入int              
7    #153 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, storage, int] 31         id              根据int_type-> int 规约 
7    #154 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, storage, int_type] 26         id              根据primary_type-> int_type 规约 
7    #155 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, storage, primary_type] 30         id              根据type_postfix-> 规约 
7    #156 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, storage, primary_type, type_postfix] 50         id              根据type-> primary_type type_postfix 规约 
7    #157 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, storage, type] 266        id              移入id               
7    #158 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, storage, type, id] 8          =               根据name-> id 规约     
7    #159 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, storage, type, name] 281        =               移入=                
7    #160 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, storage, type, name, =] 68         INTEGER         移入INTEGER          
7    #161 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, storage, type, name, =, INTEGER] 116        ;               根据CONSTANT-> INTEGER 规约 
7    #162 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, storage, type, name, =, CONSTANT] 114        ;               根据primary_expr-> CONSTANT 规约 
7    #163 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, storage, type, name, =, primary_expr] 115        ;               根据postfix_expr-> primary_expr 规约 
7    #164 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, storage, type, name, =, postfix_expr] 111        ;               根据unary_expr-> postfix_expr 规约 
7    #165 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, storage, type, name, =, unary_expr] 99         ;               根据term-> unary_expr 规约 
7    #166 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, storage, type, name, =, term] 93         ;               根据multiplicative_expr-> term 规约 
7    #167 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, storage, type, name, =, multiplicative_expr] 95         ;               根据additive_expr-> multiplicative_expr 规约 
7    #168 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, storage, type, name, =, additive_expr] 88         ;               根据shift_expr-> additive_expr 规约 
7    #169 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, storage, type, name, =, shift_expr] 97         ;               根据relational_expr-> shift_expr 规约 
7    #170 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, storage, type, name, =, relational_expr] 91         ;               根据equality_expr-> relational_expr 规约 
7    #171 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, storage, type, name, =, equality_expr] 90         ;               根据logical_and_expr-> equality_expr 规约 
7    #172 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, storage, type, name, =, logical_and_expr] 102        ;               根据logical_or_expr-> logical_and_expr 规约 
7    #173 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, storage, type, name, =, logical_or_expr] 92         ;               根据conditional_expr-> logical_or_expr 规约 
7    #174 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, storage, type, name, =, conditional_expr] 110        ;               根据expr-> conditional_expr 规约 
7    #175 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, storage, type, name, =, expr] 101        ;               根据initial_expr-> = expr 规约 
7    #176 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, storage, type, name, initial_expr] 67         ;               根据other_vars-> 规约  
7    #177 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, storage, type, name, initial_expr, other_vars] 86         ;               移入;                
8    #178 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, storage, type, name, initial_expr, other_vars, ;] 132        for             根据defvars-> storage type name initial_expr other_vars ; 规约 
8    #179 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, defvars] 247        for             根据block_componet-> defvars 规约 
8    #180 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, block_componet] 237        for             根据block_componets-> block_componets block_componet 规约 
8    #181 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets] 224        for             移入for              
8    #182 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for] 252        (               移入(                
8    #183 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (] 274        int             根据storage-> 规约     
8    #184 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, storage] 235        int             移入int              
8    #185 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, storage, int] 31         id              根据int_type-> int 规约 
8    #186 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, storage, int_type] 26         id              根据primary_type-> int_type 规约 
8    #187 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, storage, primary_type] 30         id              根据type_postfix-> 规约 
8    #188 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, storage, primary_type, type_postfix] 50         id              根据type-> primary_type type_postfix 规约 
8    #189 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, storage, type] 266        id              移入id               
8    #190 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, storage, type, id] 8          =               根据name-> id 规约     
8    #191 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, storage, type, name] 281        =               移入=                
8    #192 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, storage, type, name, =] 68         INTEGER         移入INTEGER          
8    #193 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, storage, type, name, =, INTEGER] 116        ;               根据CONSTANT-> INTEGER 规约 
8    #194 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, storage, type, name, =, CONSTANT] 114        ;               根据primary_expr-> CONSTANT 规约 
8    #195 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, storage, type, name, =, primary_expr] 115        ;               根据postfix_expr-> primary_expr 规约 
8    #196 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, storage, type, name, =, postfix_expr] 111        ;               根据unary_expr-> postfix_expr 规约 
8    #197 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, storage, type, name, =, unary_expr] 99         ;               根据term-> unary_expr 规约 
8    #198 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, storage, type, name, =, term] 93         ;               根据multiplicative_expr-> term 规约 
8    #199 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, storage, type, name, =, multiplicative_expr] 95         ;               根据additive_expr-> multiplicative_expr 规约 
8    #200 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, storage, type, name, =, additive_expr] 88         ;               根据shift_expr-> additive_expr 规约 
8    #201 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, storage, type, name, =, shift_expr] 97         ;               根据relational_expr-> shift_expr 规约 
8    #202 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, storage, type, name, =, relational_expr] 91         ;               根据equality_expr-> relational_expr 规约 
8    #203 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, storage, type, name, =, equality_expr] 90         ;               根据logical_and_expr-> equality_expr 规约 
8    #204 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, storage, type, name, =, logical_and_expr] 102        ;               根据logical_or_expr-> logical_and_expr 规约 
8    #205 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, storage, type, name, =, logical_or_expr] 92         ;               根据conditional_expr-> logical_or_expr 规约 
8    #206 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, storage, type, name, =, conditional_expr] 110        ;               根据expr-> conditional_expr 规约 
8    #207 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, storage, type, name, =, expr] 101        ;               根据initial_expr-> = expr 规约 
8    #208 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, storage, type, name, initial_expr] 67         ;               根据other_vars-> 规约  
8    #209 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, storage, type, name, initial_expr, other_vars] 86         ;               移入;                
8    #210 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, storage, type, name, initial_expr, other_vars, ;] 132        id              根据defvars-> storage type name initial_expr other_vars ; 规约 
8    #211 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, defvars] 286        id              根据forIniitialer-> defvars 规约 
8    #212 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer] 290        id              移入id               
8    #213 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, id] 113        <               根据primary_expr-> id 规约 
8    #214 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, primary_expr] 115        <               根据postfix_expr-> primary_expr 规约 
8    #215 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, postfix_expr] 111        <               根据unary_expr-> postfix_expr 规约 
8    #216 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, unary_expr] 99         <               根据term-> unary_expr 规约 
8    #217 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, term] 93         <               根据multiplicative_expr-> term 规约 
8    #218 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, multiplicative_expr] 95         <               根据additive_expr-> multiplicative_expr 规约 
8    #219 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, additive_expr] 88         <               根据shift_expr-> additive_expr 规约 
8    #220 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, shift_expr] 97         <               根据relational_expr-> shift_expr 规约 
8    #221 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, relational_expr] 91         <               移入<                
8    #222 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, relational_expr, <] 143        id              移入id               
8    #223 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, relational_expr, <, id] 113        ;               根据primary_expr-> id 规约 
8    #224 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, relational_expr, <, primary_expr] 115        ;               根据postfix_expr-> primary_expr 规约 
8    #225 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, relational_expr, <, postfix_expr] 111        ;               根据unary_expr-> postfix_expr 规约 
8    #226 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, relational_expr, <, unary_expr] 99         ;               根据term-> unary_expr 规约 
8    #227 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, relational_expr, <, term] 190        ;               根据multiplicative_expr-> term 规约 
8    #228 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, relational_expr, <, multiplicative_expr] 95         ;               根据additive_expr-> multiplicative_expr 规约 
8    #229 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, relational_expr, <, additive_expr] 88         ;               根据shift_expr-> additive_expr 规约 
8    #230 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, relational_expr, <, shift_expr] 197        ;               根据relational_expr-> relational_expr < shift_expr 规约 
8    #231 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, relational_expr] 91         ;               根据equality_expr-> relational_expr 规约 
8    #232 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, equality_expr] 90         ;               根据logical_and_expr-> equality_expr 规约 
8    #233 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, logical_and_expr] 102        ;               根据logical_or_expr-> logical_and_expr 规约 
8    #234 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, logical_or_expr] 92         ;               根据conditional_expr-> logical_or_expr 规约 
8    #235 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, conditional_expr] 110        ;               根据expr-> conditional_expr 规约 
8    #236 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, expr] 288        ;               根据optional_for_expr-> expr 规约 
8    #237 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr] 300        ;               移入;                
8    #238 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;] 307        id              移入id               
8    #239 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, id] 113        ++              根据primary_expr-> id 规约 
8    #240 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, primary_expr] 115        ++              根据postfix_expr-> primary_expr 规约 
8    #241 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, postfix_expr] 111        ++              移入++               
8    #242 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, postfix_expr, ++] 169        )               根据postfix_expr-> postfix_expr ++ 规约 
8    #243 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, postfix_expr] 111        )               根据unary_expr-> postfix_expr 规约 
8    #244 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, unary_expr] 99         )               根据term-> unary_expr 规约 
8    #245 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, term] 93         )               根据multiplicative_expr-> term 规约 
8    #246 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, multiplicative_expr] 95         )               根据additive_expr-> multiplicative_expr 规约 
8    #247 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, additive_expr] 88         )               根据shift_expr-> additive_expr 规约 
8    #248 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, shift_expr] 97         )               根据relational_expr-> shift_expr 规约 
8    #249 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, relational_expr] 91         )               根据equality_expr-> relational_expr 规约 
8    #250 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, equality_expr] 90         )               根据logical_and_expr-> equality_expr 规约 
8    #251 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, logical_and_expr] 102        )               根据logical_or_expr-> logical_and_expr 规约 
8    #252 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, logical_or_expr] 92         )               根据conditional_expr-> logical_or_expr 规约 
8    #253 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, conditional_expr] 110        )               根据expr-> conditional_expr 规约 
8    #254 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, expr] 288        )               根据optional_for_expr-> expr 规约 
8    #255 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_expr] 287        )               根据optional_for_exprs-> optional_for_expr 规约 
8    #256 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs] 313        )               移入)                
8    #257 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, )] 318        {               移入{                
9    #258 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {] 187        id              根据block_componets-> 规约 
9    #259 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets] 224        id              移入id               
9    #260 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, id] 263        [               根据primary_expr-> id 规约 
9    #261 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, primary_expr] 115        [               根据postfix_expr-> primary_expr 规约 
9    #262 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, postfix_expr] 111        [               移入[                
9    #263 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, postfix_expr, [] 172        id              移入id               
9    #264 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, postfix_expr, [, id] 113        ]               根据primary_expr-> id 规约 
9    #265 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, postfix_expr, [, primary_expr] 115        ]               根据postfix_expr-> primary_expr 规约 
9    #266 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, postfix_expr, [, postfix_expr] 111        ]               根据unary_expr-> postfix_expr 规约 
9    #267 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, postfix_expr, [, unary_expr] 99         ]               根据term-> unary_expr 规约 
9    #268 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, postfix_expr, [, term] 93         ]               根据multiplicative_expr-> term 规约 
9    #269 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, postfix_expr, [, multiplicative_expr] 95         ]               根据additive_expr-> multiplicative_expr 规约 
9    #270 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, postfix_expr, [, additive_expr] 88         ]               根据shift_expr-> additive_expr 规约 
9    #271 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, postfix_expr, [, shift_expr] 97         ]               根据relational_expr-> shift_expr 规约 
9    #272 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, postfix_expr, [, relational_expr] 91         ]               根据equality_expr-> relational_expr 规约 
9    #273 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, postfix_expr, [, equality_expr] 90         ]               根据logical_and_expr-> equality_expr 规约 
9    #274 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, postfix_expr, [, logical_and_expr] 102        ]               根据logical_or_expr-> logical_and_expr 规约 
9    #275 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, postfix_expr, [, logical_or_expr] 92         ]               根据conditional_expr-> logical_or_expr 规约 
9    #276 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, postfix_expr, [, conditional_expr] 110        ]               根据expr-> conditional_expr 规约 
9    #277 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, postfix_expr, [, expr] 218        ]               移入]                
9    #278 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, postfix_expr, [, expr, ]] 232        [               根据postfix_expr-> postfix_expr [ expr ] 规约 
9    #279 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, postfix_expr] 111        [               移入[                
9    #280 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, postfix_expr, [] 172        id              移入id               
9    #281 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, postfix_expr, [, id] 113        ]               根据primary_expr-> id 规约 
9    #282 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, postfix_expr, [, primary_expr] 115        ]               根据postfix_expr-> primary_expr 规约 
9    #283 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, postfix_expr, [, postfix_expr] 111        ]               根据unary_expr-> postfix_expr 规约 
9    #284 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, postfix_expr, [, unary_expr] 99         ]               根据term-> unary_expr 规约 
9    #285 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, postfix_expr, [, term] 93         ]               根据multiplicative_expr-> term 规约 
9    #286 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, postfix_expr, [, multiplicative_expr] 95         ]               根据additive_expr-> multiplicative_expr 规约 
9    #287 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, postfix_expr, [, additive_expr] 88         ]               根据shift_expr-> additive_expr 规约 
9    #288 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, postfix_expr, [, shift_expr] 97         ]               根据relational_expr-> shift_expr 规约 
9    #289 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, postfix_expr, [, relational_expr] 91         ]               根据equality_expr-> relational_expr 规约 
9    #290 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, postfix_expr, [, equality_expr] 90         ]               根据logical_and_expr-> equality_expr 规约 
9    #291 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, postfix_expr, [, logical_and_expr] 102        ]               根据logical_or_expr-> logical_and_expr 规约 
9    #292 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, postfix_expr, [, logical_or_expr] 92         ]               根据conditional_expr-> logical_or_expr 规约 
9    #293 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, postfix_expr, [, conditional_expr] 110        ]               根据expr-> conditional_expr 规约 
9    #294 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, postfix_expr, [, expr] 218        ]               移入]                
9    #295 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, postfix_expr, [, expr, ]] 232        =               根据postfix_expr-> postfix_expr [ expr ] 规约 
9    #296 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, postfix_expr] 111        =               根据unary_expr-> postfix_expr 规约 
9    #297 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, unary_expr] 99         =               根据term-> unary_expr 规约 
9    #298 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term] 93         =               移入=                
9    #299 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =] 152        INTEGER         移入INTEGER          
9    #300 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, INTEGER] 116        ;               根据CONSTANT-> INTEGER 规约 
9    #301 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, CONSTANT] 114        ;               根据primary_expr-> CONSTANT 规约 
9    #302 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, primary_expr] 115        ;               根据postfix_expr-> primary_expr 规约 
9    #303 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, postfix_expr] 111        ;               根据unary_expr-> postfix_expr 规约 
9    #304 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, unary_expr] 99         ;               根据term-> unary_expr 规约 
9    #305 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, term] 93         ;               根据multiplicative_expr-> term 规约 
9    #306 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, multiplicative_expr] 95         ;               根据additive_expr-> multiplicative_expr 规约 
9    #307 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, additive_expr] 88         ;               根据shift_expr-> additive_expr 规约 
9    #308 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, shift_expr] 97         ;               根据relational_expr-> shift_expr 规约 
9    #309 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, relational_expr] 91         ;               根据equality_expr-> relational_expr 规约 
9    #310 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, equality_expr] 90         ;               根据logical_and_expr-> equality_expr 规约 
9    #311 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, logical_and_expr] 102        ;               根据logical_or_expr-> logical_and_expr 规约 
9    #312 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, logical_or_expr] 92         ;               根据conditional_expr-> logical_or_expr 规约 
9    #313 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, conditional_expr] 110        ;               根据expr-> conditional_expr 规约 
9    #314 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, expr] 204        ;               根据expr-> term = expr 规约 
9    #315 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, expr] 254        ;               移入;                
10   #316 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, expr, ;] 275        id              根据stmt-> expr ; 规约 
10   #317 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, stmt] 234        id              根据block_componet-> stmt 规约 
10   #318 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, block_componet] 237        id              根据block_componets-> block_componets block_componet 规约 
10   #319 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets] 224        id              移入id               
10   #320 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, id] 263        =               根据primary_expr-> id 规约 
10   #321 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, primary_expr] 115        =               根据postfix_expr-> primary_expr 规约 
10   #322 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, postfix_expr] 111        =               根据unary_expr-> postfix_expr 规约 
10   #323 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, unary_expr] 99         =               根据term-> unary_expr 规约 
10   #324 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term] 93         =               移入=                
10   #325 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =] 152        id              移入id               
10   #326 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, id] 113        [               根据primary_expr-> id 规约 
10   #327 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, primary_expr] 115        [               根据postfix_expr-> primary_expr 规约 
10   #328 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, postfix_expr] 111        [               移入[                
10   #329 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, postfix_expr, [] 172        id              移入id               
10   #330 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, postfix_expr, [, id] 113        ]               根据primary_expr-> id 规约 
10   #331 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, postfix_expr, [, primary_expr] 115        ]               根据postfix_expr-> primary_expr 规约 
10   #332 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, postfix_expr, [, postfix_expr] 111        ]               根据unary_expr-> postfix_expr 规约 
10   #333 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, postfix_expr, [, unary_expr] 99         ]               根据term-> unary_expr 规约 
10   #334 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, postfix_expr, [, term] 93         ]               根据multiplicative_expr-> term 规约 
10   #335 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, postfix_expr, [, multiplicative_expr] 95         ]               根据additive_expr-> multiplicative_expr 规约 
10   #336 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, postfix_expr, [, additive_expr] 88         ]               根据shift_expr-> additive_expr 规约 
10   #337 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, postfix_expr, [, shift_expr] 97         ]               根据relational_expr-> shift_expr 规约 
10   #338 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, postfix_expr, [, relational_expr] 91         ]               根据equality_expr-> relational_expr 规约 
10   #339 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, postfix_expr, [, equality_expr] 90         ]               根据logical_and_expr-> equality_expr 规约 
10   #340 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, postfix_expr, [, logical_and_expr] 102        ]               根据logical_or_expr-> logical_and_expr 规约 
10   #341 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, postfix_expr, [, logical_or_expr] 92         ]               根据conditional_expr-> logical_or_expr 规约 
10   #342 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, postfix_expr, [, conditional_expr] 110        ]               根据expr-> conditional_expr 规约 
10   #343 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, postfix_expr, [, expr] 218        ]               移入]                
10   #344 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, postfix_expr, [, expr, ]] 232        [               根据postfix_expr-> postfix_expr [ expr ] 规约 
10   #345 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, postfix_expr] 111        [               移入[                
10   #346 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, postfix_expr, [] 172        id              移入id               
10   #347 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, postfix_expr, [, id] 113        ]               根据primary_expr-> id 规约 
10   #348 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, postfix_expr, [, primary_expr] 115        ]               根据postfix_expr-> primary_expr 规约 
10   #349 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, postfix_expr, [, postfix_expr] 111        ]               根据unary_expr-> postfix_expr 规约 
10   #350 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, postfix_expr, [, unary_expr] 99         ]               根据term-> unary_expr 规约 
10   #351 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, postfix_expr, [, term] 93         ]               根据multiplicative_expr-> term 规约 
10   #352 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, postfix_expr, [, multiplicative_expr] 95         ]               根据additive_expr-> multiplicative_expr 规约 
10   #353 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, postfix_expr, [, additive_expr] 88         ]               根据shift_expr-> additive_expr 规约 
10   #354 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, postfix_expr, [, shift_expr] 97         ]               根据relational_expr-> shift_expr 规约 
10   #355 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, postfix_expr, [, relational_expr] 91         ]               根据equality_expr-> relational_expr 规约 
10   #356 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, postfix_expr, [, equality_expr] 90         ]               根据logical_and_expr-> equality_expr 规约 
10   #357 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, postfix_expr, [, logical_and_expr] 102        ]               根据logical_or_expr-> logical_and_expr 规约 
10   #358 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, postfix_expr, [, logical_or_expr] 92         ]               根据conditional_expr-> logical_or_expr 规约 
10   #359 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, postfix_expr, [, conditional_expr] 110        ]               根据expr-> conditional_expr 规约 
10   #360 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, postfix_expr, [, expr] 218        ]               移入]                
10   #361 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, postfix_expr, [, expr, ]] 232        ;               根据postfix_expr-> postfix_expr [ expr ] 规约 
10   #362 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, postfix_expr] 111        ;               根据unary_expr-> postfix_expr 规约 
10   #363 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, unary_expr] 99         ;               根据term-> unary_expr 规约 
10   #364 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, term] 93         ;               根据multiplicative_expr-> term 规约 
10   #365 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, multiplicative_expr] 95         ;               根据additive_expr-> multiplicative_expr 规约 
10   #366 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, additive_expr] 88         ;               根据shift_expr-> additive_expr 规约 
10   #367 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, shift_expr] 97         ;               根据relational_expr-> shift_expr 规约 
10   #368 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, relational_expr] 91         ;               根据equality_expr-> relational_expr 规约 
10   #369 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, equality_expr] 90         ;               根据logical_and_expr-> equality_expr 规约 
10   #370 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, logical_and_expr] 102        ;               根据logical_or_expr-> logical_and_expr 规约 
10   #371 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, logical_or_expr] 92         ;               根据conditional_expr-> logical_or_expr 规约 
10   #372 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, conditional_expr] 110        ;               根据expr-> conditional_expr 规约 
10   #373 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term, =, expr] 204        ;               根据expr-> term = expr 规约 
10   #374 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, expr] 254        ;               移入;                
11   #375 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, expr, ;] 275        }               根据stmt-> expr ; 规约 
11   #376 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, stmt] 234        }               根据block_componet-> stmt 规约 
11   #377 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, block_componet] 237        }               根据block_componets-> block_componets block_componet 规约 
11   #378 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets] 224        }               移入}                
13   #379 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, }] 262        while           根据block-> { block_componets } 规约 
13   #380 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), block] 261        while           根据stmt-> block 规约  
13   #381 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), stmt] 320        while           根据for_stmt-> for ( forIniitialer optional_for_expr ; optional_for_exprs ) stmt 规约 
13   #382 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, for_stmt] 246        while           根据stmt-> for_stmt 规约 
13   #383 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, stmt] 234        while           根据block_componet-> stmt 规约 
13   #384 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, block_componet] 237        while           根据block_componets-> block_componets block_componet 规约 
13   #385 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets] 224        while           移入while            
13   #386 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while] 236        (               移入(                
13   #387 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (] 267        INTEGER         移入INTEGER          
13   #388 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, INTEGER] 116        )               根据CONSTANT-> INTEGER 规约 
13   #389 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, CONSTANT] 114        )               根据primary_expr-> CONSTANT 规约 
13   #390 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, primary_expr] 115        )               根据postfix_expr-> primary_expr 规约 
13   #391 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, postfix_expr] 111        )               根据unary_expr-> postfix_expr 规约 
13   #392 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, unary_expr] 99         )               根据term-> unary_expr 规约 
13   #393 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, term] 93         )               根据multiplicative_expr-> term 规约 
13   #394 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, multiplicative_expr] 95         )               根据additive_expr-> multiplicative_expr 规约 
13   #395 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, additive_expr] 88         )               根据shift_expr-> additive_expr 规约 
13   #396 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, shift_expr] 97         )               根据relational_expr-> shift_expr 规约 
13   #397 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, relational_expr] 91         )               根据equality_expr-> relational_expr 规约 
13   #398 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, equality_expr] 90         )               根据logical_and_expr-> equality_expr 规约 
13   #399 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, logical_and_expr] 102        )               根据logical_or_expr-> logical_and_expr 规约 
13   #400 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, logical_or_expr] 92         )               根据conditional_expr-> logical_or_expr 规约 
13   #401 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, conditional_expr] 110        )               根据expr-> conditional_expr 规约 
13   #402 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr] 282        )               移入)                
13   #403 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, )] 295        {               移入{                
14   #404 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {] 187        if              根据block_componets-> 规约 
14   #405 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets] 224        if              移入if               
14   #406 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if] 242        (               移入(                
14   #407 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (] 269        id              移入id               
14   #408 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, id] 113        [               根据primary_expr-> id 规约 
14   #409 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, primary_expr] 115        [               根据postfix_expr-> primary_expr 规约 
14   #410 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, postfix_expr] 111        [               移入[                
14   #411 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, postfix_expr, [] 172        INTEGER         移入INTEGER          
14   #412 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, postfix_expr, [, INTEGER] 116        ]               根据CONSTANT-> INTEGER 规约 
14   #413 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, postfix_expr, [, CONSTANT] 114        ]               根据primary_expr-> CONSTANT 规约 
14   #414 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, postfix_expr, [, primary_expr] 115        ]               根据postfix_expr-> primary_expr 规约 
14   #415 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, postfix_expr, [, postfix_expr] 111        ]               根据unary_expr-> postfix_expr 规约 
14   #416 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, postfix_expr, [, unary_expr] 99         ]               根据term-> unary_expr 规约 
14   #417 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, postfix_expr, [, term] 93         ]               根据multiplicative_expr-> term 规约 
14   #418 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, postfix_expr, [, multiplicative_expr] 95         ]               根据additive_expr-> multiplicative_expr 规约 
14   #419 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, postfix_expr, [, additive_expr] 88         ]               根据shift_expr-> additive_expr 规约 
14   #420 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, postfix_expr, [, shift_expr] 97         ]               根据relational_expr-> shift_expr 规约 
14   #421 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, postfix_expr, [, relational_expr] 91         ]               根据equality_expr-> relational_expr 规约 
14   #422 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, postfix_expr, [, equality_expr] 90         ]               根据logical_and_expr-> equality_expr 规约 
14   #423 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, postfix_expr, [, logical_and_expr] 102        ]               根据logical_or_expr-> logical_and_expr 规约 
14   #424 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, postfix_expr, [, logical_or_expr] 92         ]               根据conditional_expr-> logical_or_expr 规约 
14   #425 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, postfix_expr, [, conditional_expr] 110        ]               根据expr-> conditional_expr 规约 
14   #426 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, postfix_expr, [, expr] 218        ]               移入]                
14   #427 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, postfix_expr, [, expr, ]] 232        [               根据postfix_expr-> postfix_expr [ expr ] 规约 
14   #428 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, postfix_expr] 111        [               移入[                
14   #429 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, postfix_expr, [] 172        id              移入id               
14   #430 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, postfix_expr, [, id] 113        ]               根据primary_expr-> id 规约 
14   #431 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, postfix_expr, [, primary_expr] 115        ]               根据postfix_expr-> primary_expr 规约 
14   #432 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, postfix_expr, [, postfix_expr] 111        ]               根据unary_expr-> postfix_expr 规约 
14   #433 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, postfix_expr, [, unary_expr] 99         ]               根据term-> unary_expr 规约 
14   #434 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, postfix_expr, [, term] 93         ]               根据multiplicative_expr-> term 规约 
14   #435 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, postfix_expr, [, multiplicative_expr] 95         ]               根据additive_expr-> multiplicative_expr 规约 
14   #436 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, postfix_expr, [, additive_expr] 88         ]               根据shift_expr-> additive_expr 规约 
14   #437 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, postfix_expr, [, shift_expr] 97         ]               根据relational_expr-> shift_expr 规约 
14   #438 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, postfix_expr, [, relational_expr] 91         ]               根据equality_expr-> relational_expr 规约 
14   #439 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, postfix_expr, [, equality_expr] 90         ]               根据logical_and_expr-> equality_expr 规约 
14   #440 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, postfix_expr, [, logical_and_expr] 102        ]               根据logical_or_expr-> logical_and_expr 规约 
14   #441 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, postfix_expr, [, logical_or_expr] 92         ]               根据conditional_expr-> logical_or_expr 规约 
14   #442 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, postfix_expr, [, conditional_expr] 110        ]               根据expr-> conditional_expr 规约 
14   #443 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, postfix_expr, [, expr] 218        ]               移入]                
14   #444 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, postfix_expr, [, expr, ]] 232        >               根据postfix_expr-> postfix_expr [ expr ] 规约 
14   #445 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, postfix_expr] 111        >               根据unary_expr-> postfix_expr 规约 
14   #446 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, unary_expr] 99         >               根据term-> unary_expr 规约 
14   #447 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, term] 93         >               根据multiplicative_expr-> term 规约 
14   #448 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, multiplicative_expr] 95         >               根据additive_expr-> multiplicative_expr 规约 
14   #449 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, additive_expr] 88         >               根据shift_expr-> additive_expr 规约 
14   #450 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, shift_expr] 97         >               根据relational_expr-> shift_expr 规约 
14   #451 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, relational_expr] 91         >               移入>                
14   #452 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, relational_expr, >] 146        INTEGER         移入INTEGER          
14   #453 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, relational_expr, >, INTEGER] 116        )               根据CONSTANT-> INTEGER 规约 
14   #454 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, relational_expr, >, CONSTANT] 114        )               根据primary_expr-> CONSTANT 规约 
14   #455 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, relational_expr, >, primary_expr] 115        )               根据postfix_expr-> primary_expr 规约 
14   #456 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, relational_expr, >, postfix_expr] 111        )               根据unary_expr-> postfix_expr 规约 
14   #457 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, relational_expr, >, unary_expr] 99         )               根据term-> unary_expr 规约 
14   #458 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, relational_expr, >, term] 190        )               根据multiplicative_expr-> term 规约 
14   #459 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, relational_expr, >, multiplicative_expr] 95         )               根据additive_expr-> multiplicative_expr 规约 
14   #460 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, relational_expr, >, additive_expr] 88         )               根据shift_expr-> additive_expr 规约 
14   #461 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, relational_expr, >, shift_expr] 200        )               根据relational_expr-> relational_expr > shift_expr 规约 
14   #462 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, relational_expr] 91         )               根据equality_expr-> relational_expr 规约 
14   #463 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, equality_expr] 90         )               根据logical_and_expr-> equality_expr 规约 
14   #464 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, logical_and_expr] 102        )               根据logical_or_expr-> logical_and_expr 规约 
14   #465 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, logical_or_expr] 92         )               根据conditional_expr-> logical_or_expr 规约 
14   #466 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, conditional_expr] 110        )               根据expr-> conditional_expr 规约 
14   #467 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, expr] 283        )               移入)                
15   #468 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, expr, )] 296        break           移入break            
15   #469 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, expr, ), break] 245        ;               移入;                
16   #470 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, expr, ), break, ;] 272        id              根据break_stmt-> break ; 规约 
16   #471 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, expr, ), break_stmt] 244        id              根据stmt-> break_stmt 规约 
16   #472 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if, (, expr, ), stmt] 304        id              根据if_stmt-> if ( expr ) stmt 规约 
16   #473 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, if_stmt] 251        id              根据stmt-> if_stmt 规约 
16   #474 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, stmt] 234        id              根据block_componet-> stmt 规约 
16   #475 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, block_componet] 237        id              根据block_componets-> block_componets block_componet 规约 
16   #476 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets] 224        id              移入id               
16   #477 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, id] 263        ++              根据primary_expr-> id 规约 
16   #478 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, primary_expr] 115        ++              根据postfix_expr-> primary_expr 规约 
16   #479 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr] 111        ++              移入++               
16   #480 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, ++] 169        ;               根据postfix_expr-> postfix_expr ++ 规约 
16   #481 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr] 111        ;               根据unary_expr-> postfix_expr 规约 
16   #482 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, unary_expr] 99         ;               根据term-> unary_expr 规约 
16   #483 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, term] 93         ;               根据multiplicative_expr-> term 规约 
16   #484 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, multiplicative_expr] 95         ;               根据additive_expr-> multiplicative_expr 规约 
16   #485 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, additive_expr] 88         ;               根据shift_expr-> additive_expr 规约 
16   #486 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, shift_expr] 97         ;               根据relational_expr-> shift_expr 规约 
16   #487 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, relational_expr] 91         ;               根据equality_expr-> relational_expr 规约 
16   #488 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, equality_expr] 90         ;               根据logical_and_expr-> equality_expr 规约 
16   #489 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, logical_and_expr] 102        ;               根据logical_or_expr-> logical_and_expr 规约 
16   #490 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, logical_or_expr] 92         ;               根据conditional_expr-> logical_or_expr 规约 
16   #491 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, conditional_expr] 110        ;               根据expr-> conditional_expr 规约 
16   #492 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, expr] 254        ;               移入;                
17   #493 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, expr, ;] 275        id              根据stmt-> expr ; 规约 
17   #494 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, stmt] 234        id              根据block_componet-> stmt 规约 
17   #495 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, block_componet] 237        id              根据block_componets-> block_componets block_componet 规约 
17   #496 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets] 224        id              移入id               
17   #497 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, id] 263        ++              根据primary_expr-> id 规约 
17   #498 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, primary_expr] 115        ++              根据postfix_expr-> primary_expr 规约 
17   #499 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr] 111        ++              移入++               
17   #500 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, ++] 169        ;               根据postfix_expr-> postfix_expr ++ 规约 
17   #501 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr] 111        ;               根据unary_expr-> postfix_expr 规约 
17   #502 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, unary_expr] 99         ;               根据term-> unary_expr 规约 
17   #503 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, term] 93         ;               根据multiplicative_expr-> term 规约 
17   #504 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, multiplicative_expr] 95         ;               根据additive_expr-> multiplicative_expr 规约 
17   #505 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, additive_expr] 88         ;               根据shift_expr-> additive_expr 规约 
17   #506 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, shift_expr] 97         ;               根据relational_expr-> shift_expr 规约 
17   #507 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, relational_expr] 91         ;               根据equality_expr-> relational_expr 规约 
17   #508 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, equality_expr] 90         ;               根据logical_and_expr-> equality_expr 规约 
17   #509 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, logical_and_expr] 102        ;               根据logical_or_expr-> logical_and_expr 规约 
17   #510 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, logical_or_expr] 92         ;               根据conditional_expr-> logical_or_expr 规约 
17   #511 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, conditional_expr] 110        ;               根据expr-> conditional_expr 规约 
17   #512 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, expr] 254        ;               移入;                
18   #513 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, expr, ;] 275        id              根据stmt-> expr ; 规约 
18   #514 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, stmt] 234        id              根据block_componet-> stmt 规约 
18   #515 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, block_componet] 237        id              根据block_componets-> block_componets block_componet 规约 
18   #516 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets] 224        id              移入id               
18   #517 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, id] 263        (               根据primary_expr-> id 规约 
18   #518 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, primary_expr] 115        (               根据postfix_expr-> primary_expr 规约 
18   #519 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr] 111        (               移入(                
18   #520 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (] 171        STRING          移入STRING           
18   #521 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, STRING] 112        )               根据CONSTANT-> STRING 规约 
18   #522 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, CONSTANT] 114        )               根据primary_expr-> CONSTANT 规约 
18   #523 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, primary_expr] 115        )               根据postfix_expr-> primary_expr 规约 
18   #524 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, postfix_expr] 111        )               根据unary_expr-> postfix_expr 规约 
18   #525 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, unary_expr] 99         )               根据term-> unary_expr 规约 
18   #526 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, term] 93         )               根据multiplicative_expr-> term 规约 
18   #527 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, multiplicative_expr] 95         )               根据additive_expr-> multiplicative_expr 规约 
18   #528 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, additive_expr] 88         )               根据shift_expr-> additive_expr 规约 
18   #529 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, shift_expr] 97         )               根据relational_expr-> shift_expr 规约 
18   #530 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, relational_expr] 91         )               根据equality_expr-> relational_expr 规约 
18   #531 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, equality_expr] 90         )               根据logical_and_expr-> equality_expr 规约 
18   #532 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, logical_and_expr] 102        )               根据logical_or_expr-> logical_and_expr 规约 
18   #533 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, logical_or_expr] 92         )               根据conditional_expr-> logical_or_expr 规约 
18   #534 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, conditional_expr] 110        )               根据expr-> conditional_expr 规约 
18   #535 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, expr] 217        )               根据args-> expr 规约   
18   #536 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args] 216        )               移入)                
18   #537 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, )] 231        ;               根据postfix_expr-> postfix_expr ( args ) 规约 
18   #538 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr] 111        ;               根据unary_expr-> postfix_expr 规约 
18   #539 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, unary_expr] 99         ;               根据term-> unary_expr 规约 
18   #540 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, term] 93         ;               根据multiplicative_expr-> term 规约 
18   #541 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, multiplicative_expr] 95         ;               根据additive_expr-> multiplicative_expr 规约 
18   #542 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, additive_expr] 88         ;               根据shift_expr-> additive_expr 规约 
18   #543 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, shift_expr] 97         ;               根据relational_expr-> shift_expr 规约 
18   #544 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, relational_expr] 91         ;               根据equality_expr-> relational_expr 规约 
18   #545 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, equality_expr] 90         ;               根据logical_and_expr-> equality_expr 规约 
18   #546 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, logical_and_expr] 102        ;               根据logical_or_expr-> logical_and_expr 规约 
18   #547 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, logical_or_expr] 92         ;               根据conditional_expr-> logical_or_expr 规约 
18   #548 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, conditional_expr] 110        ;               根据expr-> conditional_expr 规约 
18   #549 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, expr] 254        ;               移入;                
19   #550 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, expr, ;] 275        id              根据stmt-> expr ; 规约 
19   #551 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, stmt] 234        id              根据block_componet-> stmt 规约 
19   #552 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, block_componet] 237        id              根据block_componets-> block_componets block_componet 规约 
19   #553 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets] 224        id              移入id               
19   #554 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, id] 263        (               根据primary_expr-> id 规约 
19   #555 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, primary_expr] 115        (               根据postfix_expr-> primary_expr 规约 
19   #556 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr] 111        (               移入(                
19   #557 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (] 171        STRING          移入STRING           
19   #558 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, STRING] 112        comma           根据CONSTANT-> STRING 规约 
19   #559 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, CONSTANT] 114        comma           根据primary_expr-> CONSTANT 规约 
19   #560 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, primary_expr] 115        comma           根据postfix_expr-> primary_expr 规约 
19   #561 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, postfix_expr] 111        comma           根据unary_expr-> postfix_expr 规约 
19   #562 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, unary_expr] 99         comma           根据term-> unary_expr 规约 
19   #563 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, term] 93         comma           根据multiplicative_expr-> term 规约 
19   #564 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, multiplicative_expr] 95         comma           根据additive_expr-> multiplicative_expr 规约 
19   #565 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, additive_expr] 88         comma           根据shift_expr-> additive_expr 规约 
19   #566 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, shift_expr] 97         comma           根据relational_expr-> shift_expr 规约 
19   #567 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, relational_expr] 91         comma           根据equality_expr-> relational_expr 规约 
19   #568 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, equality_expr] 90         comma           根据logical_and_expr-> equality_expr 规约 
19   #569 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, logical_and_expr] 102        comma           根据logical_or_expr-> logical_and_expr 规约 
19   #570 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, logical_or_expr] 92         comma           根据conditional_expr-> logical_or_expr 规约 
19   #571 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, conditional_expr] 110        comma           根据expr-> conditional_expr 规约 
19   #572 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, expr] 217        comma           根据args-> expr 规约   
19   #573 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args] 216        comma           移入comma            
19   #574 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma] 230        id              移入id               
19   #575 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, id] 113        comma           根据primary_expr-> id 规约 
19   #576 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, primary_expr] 115        comma           根据postfix_expr-> primary_expr 规约 
19   #577 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, postfix_expr] 111        comma           根据unary_expr-> postfix_expr 规约 
19   #578 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, unary_expr] 99         comma           根据term-> unary_expr 规约 
19   #579 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, term] 93         comma           根据multiplicative_expr-> term 规约 
19   #580 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, multiplicative_expr] 95         comma           根据additive_expr-> multiplicative_expr 规约 
19   #581 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, additive_expr] 88         comma           根据shift_expr-> additive_expr 规约 
19   #582 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, shift_expr] 97         comma           根据relational_expr-> shift_expr 规约 
19   #583 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, relational_expr] 91         comma           根据equality_expr-> relational_expr 规约 
19   #584 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, equality_expr] 90         comma           根据logical_and_expr-> equality_expr 规约 
19   #585 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, logical_and_expr] 102        comma           根据logical_or_expr-> logical_and_expr 规约 
19   #586 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, logical_or_expr] 92         comma           根据conditional_expr-> logical_or_expr 规约 
19   #587 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, conditional_expr] 110        comma           根据expr-> conditional_expr 规约 
19   #588 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, expr] 265        comma           根据args-> args comma expr 规约 
19   #589 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args] 216        comma           移入comma            
19   #590 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma] 230        id              移入id               
19   #591 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, id] 113        comma           根据primary_expr-> id 规约 
19   #592 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, primary_expr] 115        comma           根据postfix_expr-> primary_expr 规约 
19   #593 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, postfix_expr] 111        comma           根据unary_expr-> postfix_expr 规约 
19   #594 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, unary_expr] 99         comma           根据term-> unary_expr 规约 
19   #595 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, term] 93         comma           根据multiplicative_expr-> term 规约 
19   #596 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, multiplicative_expr] 95         comma           根据additive_expr-> multiplicative_expr 规约 
19   #597 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, additive_expr] 88         comma           根据shift_expr-> additive_expr 规约 
19   #598 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, shift_expr] 97         comma           根据relational_expr-> shift_expr 规约 
19   #599 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, relational_expr] 91         comma           根据equality_expr-> relational_expr 规约 
19   #600 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, equality_expr] 90         comma           根据logical_and_expr-> equality_expr 规约 
19   #601 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, logical_and_expr] 102        comma           根据logical_or_expr-> logical_and_expr 规约 
19   #602 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, logical_or_expr] 92         comma           根据conditional_expr-> logical_or_expr 规约 
19   #603 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, conditional_expr] 110        comma           根据expr-> conditional_expr 规约 
19   #604 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, expr] 265        comma           根据args-> args comma expr 规约 
19   #605 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args] 216        comma           移入comma            
19   #606 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma] 230        id              移入id               
19   #607 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, id] 113        )               根据primary_expr-> id 规约 
19   #608 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, primary_expr] 115        )               根据postfix_expr-> primary_expr 规约 
19   #609 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, postfix_expr] 111        )               根据unary_expr-> postfix_expr 规约 
19   #610 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, unary_expr] 99         )               根据term-> unary_expr 规约 
19   #611 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, term] 93         )               根据multiplicative_expr-> term 规约 
19   #612 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, multiplicative_expr] 95         )               根据additive_expr-> multiplicative_expr 规约 
19   #613 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, additive_expr] 88         )               根据shift_expr-> additive_expr 规约 
19   #614 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, shift_expr] 97         )               根据relational_expr-> shift_expr 规约 
19   #615 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, relational_expr] 91         )               根据equality_expr-> relational_expr 规约 
19   #616 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, equality_expr] 90         )               根据logical_and_expr-> equality_expr 规约 
19   #617 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, logical_and_expr] 102        )               根据logical_or_expr-> logical_and_expr 规约 
19   #618 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, logical_or_expr] 92         )               根据conditional_expr-> logical_or_expr 规约 
19   #619 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, conditional_expr] 110        )               根据expr-> conditional_expr 规约 
19   #620 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, comma, expr] 265        )               根据args-> args comma expr 规约 
19   #621 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args] 216        )               移入)                
19   #622 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr, (, args, )] 231        ;               根据postfix_expr-> postfix_expr ( args ) 规约 
19   #623 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, postfix_expr] 111        ;               根据unary_expr-> postfix_expr 规约 
19   #624 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, unary_expr] 99         ;               根据term-> unary_expr 规约 
19   #625 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, term] 93         ;               根据multiplicative_expr-> term 规约 
19   #626 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, multiplicative_expr] 95         ;               根据additive_expr-> multiplicative_expr 规约 
19   #627 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, additive_expr] 88         ;               根据shift_expr-> additive_expr 规约 
19   #628 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, shift_expr] 97         ;               根据relational_expr-> shift_expr 规约 
19   #629 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, relational_expr] 91         ;               根据equality_expr-> relational_expr 规约 
19   #630 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, equality_expr] 90         ;               根据logical_and_expr-> equality_expr 规约 
19   #631 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, logical_and_expr] 102        ;               根据logical_or_expr-> logical_and_expr 规约 
19   #632 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, logical_or_expr] 92         ;               根据conditional_expr-> logical_or_expr 规约 
19   #633 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, conditional_expr] 110        ;               根据expr-> conditional_expr 规约 
19   #634 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, expr] 254        ;               移入;                
20   #635 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, expr, ;] 275        }               根据stmt-> expr ; 规约 
20   #636 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, stmt] 234        }               根据block_componet-> stmt 规约 
20   #637 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, block_componet] 237        }               根据block_componets-> block_componets block_componet 规约 
20   #638 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets] 224        }               移入}                
21   #639 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), {, block_componets, }] 262        id              根据block-> { block_componets } 规约 
21   #640 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), block] 261        id              根据stmt-> block 规约  
21   #641 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while, (, expr, ), stmt] 303        id              根据while_stmt-> while ( expr ) stmt 规约 
21   #642 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, while_stmt] 248        id              根据stmt-> while_stmt 规约 
21   #643 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, stmt] 234        id              根据block_componet-> stmt 规约 
21   #644 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, block_componet] 237        id              根据block_componets-> block_componets block_componet 规约 
21   #645 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets] 224        id              移入id               
21   #646 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, id] 263        ++              根据primary_expr-> id 规约 
21   #647 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, primary_expr] 115        ++              根据postfix_expr-> primary_expr 规约 
21   #648 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, postfix_expr] 111        ++              移入++               
21   #649 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, postfix_expr, ++] 169        ;               根据postfix_expr-> postfix_expr ++ 规约 
21   #650 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, postfix_expr] 111        ;               根据unary_expr-> postfix_expr 规约 
21   #651 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, unary_expr] 99         ;               根据term-> unary_expr 规约 
21   #652 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, term] 93         ;               根据multiplicative_expr-> term 规约 
21   #653 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, multiplicative_expr] 95         ;               根据additive_expr-> multiplicative_expr 规约 
21   #654 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, additive_expr] 88         ;               根据shift_expr-> additive_expr 规约 
21   #655 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, shift_expr] 97         ;               根据relational_expr-> shift_expr 规约 
21   #656 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, relational_expr] 91         ;               根据equality_expr-> relational_expr 规约 
21   #657 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, equality_expr] 90         ;               根据logical_and_expr-> equality_expr 规约 
21   #658 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, logical_and_expr] 102        ;               根据logical_or_expr-> logical_and_expr 规约 
21   #659 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, logical_or_expr] 92         ;               根据conditional_expr-> logical_or_expr 规约 
21   #660 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, conditional_expr] 110        ;               根据expr-> conditional_expr 规约 
21   #661 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, expr] 254        ;               移入;                
22   #662 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, expr, ;] 275        }               根据stmt-> expr ; 规约 
22   #663 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, stmt] 234        }               根据block_componet-> stmt 规约 
22   #664 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, block_componet] 237        }               根据block_componets-> block_componets block_componet 规约 
22   #665 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets] 224        }               移入}                
24   #666 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), {, block_componets, }] 262        id              根据block-> { block_componets } 规约 
24   #667 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), block] 261        id              根据stmt-> block 规约  
24   #668 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for, (, forIniitialer, optional_for_expr, ;, optional_for_exprs, ), stmt] 320        id              根据for_stmt-> for ( forIniitialer optional_for_expr ; optional_for_exprs ) stmt 规约 
24   #669 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, for_stmt]     246        id              根据stmt-> for_stmt 规约 
24   #670 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, stmt]         234        id              根据block_componet-> stmt 规约 
24   #671 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, block_componet] 237        id              根据block_componets-> block_componets block_componet 规约 
24   #672 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets]               224        id              移入id               
24   #673 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, id]           263        (               根据primary_expr-> id 规约 
24   #674 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, primary_expr] 115        (               根据postfix_expr-> primary_expr 规约 
24   #675 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr] 111        (               移入(                
24   #676 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (] 171        STRING          移入STRING           
24   #677 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, STRING] 112        )               根据CONSTANT-> STRING 规约 
24   #678 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, CONSTANT] 114        )               根据primary_expr-> CONSTANT 规约 
24   #679 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, primary_expr] 115        )               根据postfix_expr-> primary_expr 规约 
24   #680 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, postfix_expr] 111        )               根据unary_expr-> postfix_expr 规约 
24   #681 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, unary_expr] 99         )               根据term-> unary_expr 规约 
24   #682 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, term] 93         )               根据multiplicative_expr-> term 规约 
24   #683 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, multiplicative_expr] 95         )               根据additive_expr-> multiplicative_expr 规约 
24   #684 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, additive_expr] 88         )               根据shift_expr-> additive_expr 规约 
24   #685 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, shift_expr] 97         )               根据relational_expr-> shift_expr 规约 
24   #686 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, relational_expr] 91         )               根据equality_expr-> relational_expr 规约 
24   #687 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, equality_expr] 90         )               根据logical_and_expr-> equality_expr 规约 
24   #688 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, logical_and_expr] 102        )               根据logical_or_expr-> logical_and_expr 规约 
24   #689 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, logical_or_expr] 92         )               根据conditional_expr-> logical_or_expr 规约 
24   #690 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, conditional_expr] 110        )               根据expr-> conditional_expr 规约 
24   #691 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, expr] 217        )               根据args-> expr 规约   
24   #692 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args] 216        )               移入)                
24   #693 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, )] 231        ;               根据postfix_expr-> postfix_expr ( args ) 规约 
24   #694 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr] 111        ;               根据unary_expr-> postfix_expr 规约 
24   #695 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, unary_expr]   99         ;               根据term-> unary_expr 规约 
24   #696 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, term]         93         ;               根据multiplicative_expr-> term 规约 
24   #697 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, multiplicative_expr] 95         ;               根据additive_expr-> multiplicative_expr 规约 
24   #698 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, additive_expr] 88         ;               根据shift_expr-> additive_expr 规约 
24   #699 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, shift_expr]   97         ;               根据relational_expr-> shift_expr 规约 
24   #700 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, relational_expr] 91         ;               根据equality_expr-> relational_expr 规约 
24   #701 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, equality_expr] 90         ;               根据logical_and_expr-> equality_expr 规约 
24   #702 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, logical_and_expr] 102        ;               根据logical_or_expr-> logical_and_expr 规约 
24   #703 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, logical_or_expr] 92         ;               根据conditional_expr-> logical_or_expr 规约 
24   #704 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, conditional_expr] 110        ;               根据expr-> conditional_expr 规约 
24   #705 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, expr]         254        ;               移入;                
25   #706 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, expr, ;]      275        id              根据stmt-> expr ; 规约 
25   #707 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, stmt]         234        id              根据block_componet-> stmt 规约 
25   #708 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, block_componet] 237        id              根据block_componets-> block_componets block_componet 规约 
25   #709 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets]               224        id              移入id               
25   #710 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, id]           263        (               根据primary_expr-> id 规约 
25   #711 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, primary_expr] 115        (               根据postfix_expr-> primary_expr 规约 
25   #712 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr] 111        (               移入(                
25   #713 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (] 171        STRING          移入STRING           
25   #714 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, STRING] 112        comma           根据CONSTANT-> STRING 规约 
25   #715 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, CONSTANT] 114        comma           根据primary_expr-> CONSTANT 规约 
25   #716 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, primary_expr] 115        comma           根据postfix_expr-> primary_expr 规约 
25   #717 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, postfix_expr] 111        comma           根据unary_expr-> postfix_expr 规约 
25   #718 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, unary_expr] 99         comma           根据term-> unary_expr 规约 
25   #719 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, term] 93         comma           根据multiplicative_expr-> term 规约 
25   #720 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, multiplicative_expr] 95         comma           根据additive_expr-> multiplicative_expr 规约 
25   #721 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, additive_expr] 88         comma           根据shift_expr-> additive_expr 规约 
25   #722 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, shift_expr] 97         comma           根据relational_expr-> shift_expr 规约 
25   #723 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, relational_expr] 91         comma           根据equality_expr-> relational_expr 规约 
25   #724 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, equality_expr] 90         comma           根据logical_and_expr-> equality_expr 规约 
25   #725 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, logical_and_expr] 102        comma           根据logical_or_expr-> logical_and_expr 规约 
25   #726 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, logical_or_expr] 92         comma           根据conditional_expr-> logical_or_expr 规约 
25   #727 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, conditional_expr] 110        comma           根据expr-> conditional_expr 规约 
25   #728 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, expr] 217        comma           根据args-> expr 规约   
25   #729 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args] 216        comma           移入comma            
25   #730 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma] 230        id              移入id               
25   #731 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, id] 113        [               根据primary_expr-> id 规约 
25   #732 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, primary_expr] 115        [               根据postfix_expr-> primary_expr 规约 
25   #733 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, postfix_expr] 111        [               移入[                
25   #734 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, postfix_expr, [] 172        INTEGER         移入INTEGER          
25   #735 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, postfix_expr, [, INTEGER] 116        ]               根据CONSTANT-> INTEGER 规约 
25   #736 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, postfix_expr, [, CONSTANT] 114        ]               根据primary_expr-> CONSTANT 规约 
25   #737 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, postfix_expr, [, primary_expr] 115        ]               根据postfix_expr-> primary_expr 规约 
25   #738 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, postfix_expr, [, postfix_expr] 111        ]               根据unary_expr-> postfix_expr 规约 
25   #739 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, postfix_expr, [, unary_expr] 99         ]               根据term-> unary_expr 规约 
25   #740 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, postfix_expr, [, term] 93         ]               根据multiplicative_expr-> term 规约 
25   #741 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, postfix_expr, [, multiplicative_expr] 95         ]               根据additive_expr-> multiplicative_expr 规约 
25   #742 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, postfix_expr, [, additive_expr] 88         ]               根据shift_expr-> additive_expr 规约 
25   #743 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, postfix_expr, [, shift_expr] 97         ]               根据relational_expr-> shift_expr 规约 
25   #744 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, postfix_expr, [, relational_expr] 91         ]               根据equality_expr-> relational_expr 规约 
25   #745 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, postfix_expr, [, equality_expr] 90         ]               根据logical_and_expr-> equality_expr 规约 
25   #746 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, postfix_expr, [, logical_and_expr] 102        ]               根据logical_or_expr-> logical_and_expr 规约 
25   #747 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, postfix_expr, [, logical_or_expr] 92         ]               根据conditional_expr-> logical_or_expr 规约 
25   #748 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, postfix_expr, [, conditional_expr] 110        ]               根据expr-> conditional_expr 规约 
25   #749 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, postfix_expr, [, expr] 218        ]               移入]                
25   #750 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, postfix_expr, [, expr, ]] 232        [               根据postfix_expr-> postfix_expr [ expr ] 规约 
25   #751 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, postfix_expr] 111        [               移入[                
25   #752 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, postfix_expr, [] 172        id              移入id               
25   #753 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, postfix_expr, [, id] 113        ]               根据primary_expr-> id 规约 
25   #754 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, postfix_expr, [, primary_expr] 115        ]               根据postfix_expr-> primary_expr 规约 
25   #755 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, postfix_expr, [, postfix_expr] 111        ]               根据unary_expr-> postfix_expr 规约 
25   #756 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, postfix_expr, [, unary_expr] 99         ]               根据term-> unary_expr 规约 
25   #757 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, postfix_expr, [, term] 93         ]               根据multiplicative_expr-> term 规约 
25   #758 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, postfix_expr, [, multiplicative_expr] 95         ]               根据additive_expr-> multiplicative_expr 规约 
25   #759 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, postfix_expr, [, additive_expr] 88         ]               根据shift_expr-> additive_expr 规约 
25   #760 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, postfix_expr, [, shift_expr] 97         ]               根据relational_expr-> shift_expr 规约 
25   #761 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, postfix_expr, [, relational_expr] 91         ]               根据equality_expr-> relational_expr 规约 
25   #762 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, postfix_expr, [, equality_expr] 90         ]               根据logical_and_expr-> equality_expr 规约 
25   #763 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, postfix_expr, [, logical_and_expr] 102        ]               根据logical_or_expr-> logical_and_expr 规约 
25   #764 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, postfix_expr, [, logical_or_expr] 92         ]               根据conditional_expr-> logical_or_expr 规约 
25   #765 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, postfix_expr, [, conditional_expr] 110        ]               根据expr-> conditional_expr 规约 
25   #766 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, postfix_expr, [, expr] 218        ]               移入]                
25   #767 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, postfix_expr, [, expr, ]] 232        )               根据postfix_expr-> postfix_expr [ expr ] 规约 
25   #768 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, postfix_expr] 111        )               根据unary_expr-> postfix_expr 规约 
25   #769 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, unary_expr] 99         )               根据term-> unary_expr 规约 
25   #770 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, term] 93         )               根据multiplicative_expr-> term 规约 
25   #771 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, multiplicative_expr] 95         )               根据additive_expr-> multiplicative_expr 规约 
25   #772 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, additive_expr] 88         )               根据shift_expr-> additive_expr 规约 
25   #773 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, shift_expr] 97         )               根据relational_expr-> shift_expr 规约 
25   #774 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, relational_expr] 91         )               根据equality_expr-> relational_expr 规约 
25   #775 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, equality_expr] 90         )               根据logical_and_expr-> equality_expr 规约 
25   #776 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, logical_and_expr] 102        )               根据logical_or_expr-> logical_and_expr 规约 
25   #777 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, logical_or_expr] 92         )               根据conditional_expr-> logical_or_expr 规约 
25   #778 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, conditional_expr] 110        )               根据expr-> conditional_expr 规约 
25   #779 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, comma, expr] 265        )               根据args-> args comma expr 规约 
25   #780 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args] 216        )               移入)                
25   #781 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr, (, args, )] 231        ;               根据postfix_expr-> postfix_expr ( args ) 规约 
25   #782 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, postfix_expr] 111        ;               根据unary_expr-> postfix_expr 规约 
25   #783 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, unary_expr]   99         ;               根据term-> unary_expr 规约 
25   #784 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, term]         93         ;               根据multiplicative_expr-> term 规约 
25   #785 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, multiplicative_expr] 95         ;               根据additive_expr-> multiplicative_expr 规约 
25   #786 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, additive_expr] 88         ;               根据shift_expr-> additive_expr 规约 
25   #787 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, shift_expr]   97         ;               根据relational_expr-> shift_expr 规约 
25   #788 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, relational_expr] 91         ;               根据equality_expr-> relational_expr 规约 
25   #789 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, equality_expr] 90         ;               根据logical_and_expr-> equality_expr 规约 
25   #790 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, logical_and_expr] 102        ;               根据logical_or_expr-> logical_and_expr 规约 
25   #791 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, logical_or_expr] 92         ;               根据conditional_expr-> logical_or_expr 规约 
25   #792 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, conditional_expr] 110        ;               根据expr-> conditional_expr 规约 
25   #793 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, expr]         254        ;               移入;                
26   #794 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, expr, ;]      275        }               根据stmt-> expr ; 规约 
26   #795 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, stmt]         234        }               根据block_componet-> stmt 规约 
26   #796 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, block_componet] 237        }               根据block_componets-> block_componets block_componet 规约 
26   #797 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets]               224        }               移入}                
27   #798 [$, import_staments, top_decls, storage, type, name, (, params, ), {, block_componets, }]            262        $               根据block-> { block_componets } 规约 
27   #799 [$, import_staments, top_decls, storage, type, name, (, params, ), block]                            188        $               根据defun-> storage type name ( params ) block 规约 
27   #800 [$, import_staments, top_decls, defun]                                                               15         $               根据top_decl-> defun 规约 
27   #801 [$, import_staments, top_decls, top_decl]                                                            19         $               根据top_decls-> top_decls top_decl 规约 
27   #802 [$, import_staments, top_decls]                                                                      5          $               根据programe-> import_staments top_decls 规约 
27   #803 [$, programe]                                                                                        2          $               接受                 

*****语法分析过程结束******
规约了659次
