

----------------------------------------------------------------------
AST.STMT.BlockNode@5e8c92f4的符号表:
asmMain


----------------------------------------------------------------------
AST.STMT.BlockNode@28ba21f3的符号表:
null


----------------------------------------------------------------------
AST.STMT.BlockNode@593634ad的符号表:
null

           翻译基本语句BinaryOpNode{op='<'}
isRelOp=true,node=BinaryOpNode{op='<'}(8,20)

           翻译基本语句BinaryOpNode{op='<'}完毕

           翻译基本语句$LiteralNodeIntegerNode,#1
isRelOp=false,node=$LiteralNodeIntegerNode,#1(13,14)

           翻译基本语句$LiteralNodeIntegerNode,#1完毕


----------------------------------------------------------------------
AST.STMT.BlockNode@17d10166的符号表:
null

           翻译基本语句BinaryOpNode{op='>'}
isRelOp=true,node=BinaryOpNode{op='>'}(14,23)

           翻译基本语句BinaryOpNode{op='>'}完毕

***********************************
当前栈内容:[L2, L13]

           翻译基本语句BinaryOpNode{op='<'}
isRelOp=true,node=BinaryOpNode{op='<'}(6,13)

           翻译基本语句BinaryOpNode{op='<'}完毕

-----------------------------------
starts=[0, 40, 4, 19, 7, 7, 20, 36, 24, 20, 4, 41, 50]
size=13


--------------------------------------
creating new Block:start=0,end=4


--------------------------------------
creating new Block:start=4,end=7


--------------------------------------
creating new Block:start=7,end=19


--------------------------------------
creating new Block:start=19,end=20


--------------------------------------
creating new Block:start=20,end=24


--------------------------------------
creating new Block:start=24,end=36


--------------------------------------
creating new Block:start=36,end=40


--------------------------------------
creating new Block:start=40,end=41


--------------------------------------
creating new Block:start=41,end=50


--------------------------------------
creating new Block:start=50,end=51

--------------------------<B2>------------------------------

--------------------------<B2>------------------------------
前驱:[(ENTER)B0]

     I0  :	 enter asmMain                       	3         

     I1  :	 $i = 0                              	5         

     I2  :	 $i = 0                              	6         
     I3  :	 jump L4                             	6         
后继:[B9]

--------------------------</B2>-----------------------------

--------------------------</B2>-----------------------------

--------------------------<B3 (L3)>------------------------------

--------------------------<B3 (L3)>------------------------------
前驱:[B9]

(L3) I4  :	 $x = 1                              	7         

     I5  :	 $j = 0                              	8         
     I6  :	 jump L9                             	8         
后继:[B5]

--------------------------</B3>-----------------------------

--------------------------</B3>-----------------------------

--------------------------<B4 (L8)>------------------------------

--------------------------<B4 (L8)>------------------------------
前驱:[B5]

(L8) I7  :	 t0 = $i * 40                        	9         
     I8  :	 t1 = $j * 4                         	9         
     I9  :	 t2 = t0 + t1                        	9         
     I10 :	 t3 = offset $a[t2]                  	9         
     I11 :	 t3 = 0                              	9         

     I12 :	 t4 = $i * 40                        	10        
     I13 :	 t5 = $j * 4                         	10        
     I14 :	 t6 = t4 + t5                        	10        
     I15 :	 t7 = $a[t6]                         	10        
     I16 :	 $x = t7                             	10        

     I17 :	 t8 = $j + 1                         	8         
     I18 :	 $j = t8                             	8         
后继:[B5]

--------------------------</B4>-----------------------------

--------------------------</B4>-----------------------------

--------------------------<B5 (L9)>------------------------------

--------------------------<B5 (L9)>------------------------------
前驱:[B4, B3]

(L9) I19 :	 if_jump $j < $i   L8                	8         
后继:[B6, B4]

--------------------------</B5>-----------------------------

--------------------------</B5>-----------------------------

--------------------------<B6 (L7)>------------------------------

--------------------------<B6 (L7)>------------------------------
前驱:[B5, B7]

(L7) I20 :	 t9 = $i * 4                         	14        
     I21 :	 t10 = 0 + t9                        	14        
     I22 :	 t11 = $a[t10]                       	14        
     I23 :	 if_jump t11 > 10   L13              	14        
后继:[B7, B8]

--------------------------</B6>-----------------------------

--------------------------</B6>-----------------------------

--------------------------<B7 (L14)>------------------------------

--------------------------<B7 (L14)>------------------------------
前驱:[B6]

(L14) I25 :	 t12 = $x + 1                       	16        
     I26 :	 $x = t12                            	16        

     I27 :	 t13 = $i + 1                        	17        
     I28 :	 $i = t13                            	17        

     I29 :	 param "hello\n"                     	18        
     I30 :	 t14 = call @printf                  	18        

     I31 :	 param $a                            	19        
     I32 :	 param $x                            	19        
     I33 :	 param $i                            	19        
     I34 :	 param "i=%d,x%d\n,a=%p"             	19        
     I35 :	 t15 = call @printf                  	19        

     I36 :	 jump L7                             	13        
后继:[B6]

--------------------------</B7>-----------------------------

--------------------------</B7>-----------------------------

--------------------------<B8 (L13)>------------------------------

--------------------------<B8 (L13)>------------------------------
前驱:[B6]

(L13) I37 :	 t16 = $i + 1                       	21        
     I38 :	 $i = t16                            	21        

     I39 :	 t17 = $i + 1                        	6         
     I40 :	 $i = t17                            	6         
后继:[B9]

--------------------------</B8>-----------------------------

--------------------------</B8>-----------------------------

--------------------------<B9 (L4)>------------------------------

--------------------------<B9 (L4)>------------------------------
前驱:[B8, B2]

(L4) I41 :	 if_jump $i < 10   L3                	6         
后继:[B10, B3]

--------------------------</B9>-----------------------------

--------------------------</B9>-----------------------------

--------------------------<B10>------------------------------

--------------------------<B10>------------------------------
前驱:[B9]

     I42 :	 param "hello,out of loops\n"        	24        
     I43 :	 t18 = call @printf                  	24        

     I44 :	 t19 = $i * 4                        	25        
     I45 :	 t20 = 0 + t19                       	25        
     I46 :	 t21 = $a[t20]                       	25        
     I47 :	 param t21                           	25        
     I48 :	 param "a[0][i]=%d\n"                	25        
     I49 :	 t22 = call @printf                  	25        

     I50 :	 ret                                 	-2        
后继:[(EXIT)B1]

--------------------------</B10>-----------------------------

--------------------------</B10>-----------------------------

--------------------------<(ENTER)B0>------------------------------

--------------------------<(ENTER)B0>------------------------------
前驱:[]
后继:[B2]

--------------------------</(ENTER)B0>-----------------------------

--------------------------</(ENTER)B0>-----------------------------

--------------------------<(EXIT)B1>------------------------------

--------------------------<(EXIT)B1>------------------------------
前驱:[B10]
后继:[]

--------------------------</(EXIT)B1>-----------------------------

--------------------------</(EXIT)B1>-----------------------------

--------------------------<B13>------------------------------

--------------------------<B13>------------------------------
前驱:[]
     I51 :	 exit                                	-2        
后继:[]

--------------------------</B13>-----------------------------

--------------------------</B13>-----------------------------
Exit:[$a, $i]

--------------------------------------
指令:     I3  :	 jump L4

--------------------------------------
指令:     I52 :	 $i = 0
#info[2]填入$i的活跃信息:true
#flag=false,$i在此指令前是否活跃?:false
#指令     I52 :	 $i = 0的下一次使用:-1

--------------------------------------
指令:     I0  :	 enter asmMain

--------------------------------------
指令:     I0  :	 enter asmMain
nextUsed:-1

--------------------------------------
指令:     I52 :	 $i = 0
result:$i,active:true
nextUsed:-1

--------------------------------------
指令:     I3  :	 jump L4
result:L4,active:false
nextUsed:-1
Exit:[$a, $j, $i, $x]

--------------------------------------
指令:     I6  :	 jump L9

--------------------------------------
指令:     I54 :	 $j = 0
#info[2]填入$j的活跃信息:true
#flag=false,$j在此指令前是否活跃?:false
#指令     I54 :	 $j = 0的下一次使用:-1

--------------------------------------
指令:(L3) I53 :	 $x = 1
#info[2]填入$x的活跃信息:true
#flag=false,$x在此指令前是否活跃?:false
#指令(L3) I53 :	 $x = 1的下一次使用:-1

--------------------------------------
指令:(L3) I53 :	 $x = 1
result:$x,active:true
nextUsed:-1

--------------------------------------
指令:     I54 :	 $j = 0
result:$j,active:true
nextUsed:-1

--------------------------------------
指令:     I6  :	 jump L9
result:L9,active:false
nextUsed:-1
Exit:[$a, $x, $j, $i]

--------------------------------------
指令:     I63 :	 $j = t8
#info[2]填入$j的活跃信息:true
#flag=false,$j在此指令前是否活跃?:false
#指令     I63 :	 $j = t8的下一次使用:-1
#info[0]填入t8的活跃信息:false
#flag=true,t8在此指令前是否活跃?:true
#t8的下一次使用位置:63

--------------------------------------
指令:     I62 :	 t8 = $j + 1
#info[2]填入t8的活跃信息:true
#flag=false,t8在此指令前是否活跃?:false
#指令     I62 :	 t8 = $j + 1的下一次使用:-1
#info[0]填入$j的活跃信息:false
#flag=true,$j在此指令前是否活跃?:true
#$j的下一次使用位置:62

--------------------------------------
指令:     I59 :	 $x = 0
#info[2]填入$x的活跃信息:true
#flag=false,$x在此指令前是否活跃?:false
#指令     I59 :	 $x = 0的下一次使用:-1

--------------------------------------
指令:     I61 :	 t3 = 0
#info[2]填入t3的活跃信息:false
#flag=true,t3在此指令前是否活跃?:true
#指令     I61 :	 t3 = 0的下一次使用:-1

--------------------------------------
指令:     I60 :	 t3 = offset $a[t2]
#info[2]填入t3的活跃信息:true
#flag=false,t3在此指令前是否活跃?:false
#指令     I60 :	 t3 = offset $a[t2]的下一次使用:-1
#info[0]填入$a的活跃信息:true
#flag=true,$a在此指令前是否活跃?:true
#$a的下一次使用位置:60
#info[1]填入t2的活跃信息:false
#flag=true,t2在此指令前是否活跃?:true
#t2的下一次使用位置:60

--------------------------------------
指令:     I57 :	 t2 = t0 + t1
#info[2]填入t2的活跃信息:true
#flag=false,t2在此指令前是否活跃?:false
#指令     I57 :	 t2 = t0 + t1的下一次使用:-1
#info[0]填入t0的活跃信息:false
#flag=true,t0在此指令前是否活跃?:true
#t0的下一次使用位置:57
#info[1]填入t1的活跃信息:false
#flag=true,t1在此指令前是否活跃?:true
#t1的下一次使用位置:57

--------------------------------------
指令:     I56 :	 t1 = $j * 4
#info[2]填入t1的活跃信息:true
#flag=false,t1在此指令前是否活跃?:false
#指令     I56 :	 t1 = $j * 4的下一次使用:-1
#info[0]填入$j的活跃信息:true
#flag=true,$j在此指令前是否活跃?:true
#$j的下一次使用位置:56

--------------------------------------
指令:(L8) I55 :	 t0 = $i * 40
#info[2]填入t0的活跃信息:true
#flag=false,t0在此指令前是否活跃?:false
#指令(L8) I55 :	 t0 = $i * 40的下一次使用:-1
#info[0]填入$i的活跃信息:true
#flag=true,$i在此指令前是否活跃?:true
#$i的下一次使用位置:55

--------------------------------------
指令:(L8) I55 :	 t0 = $i * 40
arg1:$i,active:true
result:t0,active:true
nextUsed:57

--------------------------------------
指令:     I56 :	 t1 = $j * 4
arg1:$j,active:true
result:t1,active:true
nextUsed:57

--------------------------------------
指令:     I57 :	 t2 = t0 + t1
arg1:t0,active:false
arg2:t1,active:false
result:t2,active:true
nextUsed:60

--------------------------------------
指令:     I60 :	 t3 = offset $a[t2]
arg1:$a,active:true
arg2:t2,active:false
result:t3,active:true
nextUsed:-1

--------------------------------------
指令:     I61 :	 t3 = 0
result:t3,active:false
nextUsed:-1

--------------------------------------
指令:     I59 :	 $x = 0
result:$x,active:true
nextUsed:-1

--------------------------------------
指令:     I62 :	 t8 = $j + 1
arg1:$j,active:false
result:t8,active:true
nextUsed:63

--------------------------------------
指令:     I63 :	 $j = t8
arg1:t8,active:false
result:$j,active:true
nextUsed:-1
Exit:[$a, $j, $i, $x]

--------------------------------------
指令:(L9) I64 :	 if_jump $j < $i   L8
#info[0]填入$j的活跃信息:true
#flag=true,$j在此指令前是否活跃?:true
#$j的下一次使用位置:64
#info[1]填入$i的活跃信息:true
#flag=true,$i在此指令前是否活跃?:true
#$i的下一次使用位置:64

--------------------------------------
指令:(L9) I64 :	 if_jump $j < $i   L8
arg1:$j,active:true
arg2:$i,active:true
result:L8,active:false
nextUsed:-1
Exit:[$a, $i, $x]

--------------------------------------
指令:     I67 :	 if_jump t11 > 10   L13
#info[0]填入t11的活跃信息:false
#flag=true,t11在此指令前是否活跃?:true
#t11的下一次使用位置:67

--------------------------------------
指令:     I66 :	 t11 = $a[t9]
#info[2]填入t11的活跃信息:true
#flag=false,t11在此指令前是否活跃?:false
#指令     I66 :	 t11 = $a[t9]的下一次使用:-1
#info[0]填入$a的活跃信息:true
#flag=true,$a在此指令前是否活跃?:true
#$a的下一次使用位置:66
#info[1]填入t9的活跃信息:false
#flag=true,t9在此指令前是否活跃?:true
#t9的下一次使用位置:66

--------------------------------------
指令:(L7) I65 :	 t9 = $i * 4
#info[2]填入t9的活跃信息:true
#flag=false,t9在此指令前是否活跃?:false
#指令(L7) I65 :	 t9 = $i * 4的下一次使用:-1
#info[0]填入$i的活跃信息:true
#flag=true,$i在此指令前是否活跃?:true
#$i的下一次使用位置:65

--------------------------------------
指令:(L7) I65 :	 t9 = $i * 4
arg1:$i,active:true
result:t9,active:true
nextUsed:66

--------------------------------------
指令:     I66 :	 t11 = $a[t9]
arg1:$a,active:true
arg2:t9,active:false
result:t11,active:true
nextUsed:67

--------------------------------------
指令:     I67 :	 if_jump t11 > 10   L13
arg1:t11,active:false
result:L13,active:false
nextUsed:-1
Exit:[$a, $i, $x]

--------------------------------------
指令:     I36 :	 jump L7

--------------------------------------
指令:     I35 :	 t15 = call @printf
#info[2]填入t15的活跃信息:false
#flag=false,t15在此指令前是否活跃?:false
#指令     I35 :	 t15 = call @printf的下一次使用:-1

--------------------------------------
指令:     I76 :	 param "i=%d,x%d\n,a=%p"

--------------------------------------
指令:     I75 :	 param $i
#info[0]填入$i的活跃信息:true
#flag=true,$i在此指令前是否活跃?:true
#$i的下一次使用位置:75

--------------------------------------
指令:     I74 :	 param $x
#info[0]填入$x的活跃信息:true
#flag=true,$x在此指令前是否活跃?:true
#$x的下一次使用位置:74

--------------------------------------
指令:     I73 :	 param $a
#info[0]填入$a的活跃信息:true
#flag=true,$a在此指令前是否活跃?:true
#$a的下一次使用位置:73

--------------------------------------
指令:     I30 :	 t14 = call @printf
#info[2]填入t14的活跃信息:false
#flag=false,t14在此指令前是否活跃?:false
#指令     I30 :	 t14 = call @printf的下一次使用:-1

--------------------------------------
指令:     I72 :	 param "hello\n"

--------------------------------------
指令:     I71 :	 $i = t13
#info[2]填入$i的活跃信息:true
#flag=false,$i在此指令前是否活跃?:false
#指令     I71 :	 $i = t13的下一次使用:-1
#info[0]填入t13的活跃信息:false
#flag=true,t13在此指令前是否活跃?:true
#t13的下一次使用位置:71

--------------------------------------
指令:     I70 :	 t13 = $i + 1
#info[2]填入t13的活跃信息:true
#flag=false,t13在此指令前是否活跃?:false
#指令     I70 :	 t13 = $i + 1的下一次使用:-1
#info[0]填入$i的活跃信息:false
#flag=true,$i在此指令前是否活跃?:true
#$i的下一次使用位置:70

--------------------------------------
指令:     I69 :	 $x = t12
#info[2]填入$x的活跃信息:true
#flag=false,$x在此指令前是否活跃?:false
#指令     I69 :	 $x = t12的下一次使用:-1
#info[0]填入t12的活跃信息:false
#flag=true,t12在此指令前是否活跃?:true
#t12的下一次使用位置:69

--------------------------------------
指令:(L14) I68 :	 t12 = $x + 1
#info[2]填入t12的活跃信息:true
#flag=false,t12在此指令前是否活跃?:false
#指令(L14) I68 :	 t12 = $x + 1的下一次使用:-1
#info[0]填入$x的活跃信息:false
#flag=true,$x在此指令前是否活跃?:true
#$x的下一次使用位置:68

--------------------------------------
指令:(L14) I68 :	 t12 = $x + 1
arg1:$x,active:false
result:t12,active:true
nextUsed:69

--------------------------------------
指令:     I69 :	 $x = t12
arg1:t12,active:false
result:$x,active:true
nextUsed:74

--------------------------------------
指令:     I70 :	 t13 = $i + 1
arg1:$i,active:false
result:t13,active:true
nextUsed:71

--------------------------------------
指令:     I71 :	 $i = t13
arg1:t13,active:false
result:$i,active:true
nextUsed:75

--------------------------------------
指令:     I72 :	 param "hello\n"
nextUsed:-1

--------------------------------------
指令:     I30 :	 t14 = call @printf
result:t14,active:false
nextUsed:-1

--------------------------------------
指令:     I73 :	 param $a
arg1:$a,active:true
nextUsed:-1

--------------------------------------
指令:     I74 :	 param $x
arg1:$x,active:true
nextUsed:-1

--------------------------------------
指令:     I75 :	 param $i
arg1:$i,active:true
nextUsed:-1

--------------------------------------
指令:     I76 :	 param "i=%d,x%d\n,a=%p"
nextUsed:-1

--------------------------------------
指令:     I35 :	 t15 = call @printf
result:t15,active:false
nextUsed:-1

--------------------------------------
指令:     I36 :	 jump L7
result:L7,active:false
nextUsed:-1
Exit:[$a, $i]

--------------------------------------
指令:     I79 :	 $i = t17
#info[2]填入$i的活跃信息:true
#flag=false,$i在此指令前是否活跃?:false
#指令     I79 :	 $i = t17的下一次使用:-1
#info[0]填入t17的活跃信息:false
#flag=true,t17在此指令前是否活跃?:true
#t17的下一次使用位置:79

--------------------------------------
指令:     I78 :	 t17 = t16 + 1
#info[2]填入t17的活跃信息:true
#flag=false,t17在此指令前是否活跃?:false
#指令     I78 :	 t17 = t16 + 1的下一次使用:-1
#info[0]填入t16的活跃信息:false
#flag=true,t16在此指令前是否活跃?:true
#t16的下一次使用位置:78

--------------------------------------
指令:(L13) I77 :	 t16 = $i + 1
#info[2]填入t16的活跃信息:true
#flag=false,t16在此指令前是否活跃?:false
#指令(L13) I77 :	 t16 = $i + 1的下一次使用:-1
#info[0]填入$i的活跃信息:false
#flag=true,$i在此指令前是否活跃?:true
#$i的下一次使用位置:77

--------------------------------------
指令:(L13) I77 :	 t16 = $i + 1
arg1:$i,active:false
result:t16,active:true
nextUsed:78

--------------------------------------
指令:     I78 :	 t17 = t16 + 1
arg1:t16,active:false
result:t17,active:true
nextUsed:79

--------------------------------------
指令:     I79 :	 $i = t17
arg1:t17,active:false
result:$i,active:true
nextUsed:-1
Exit:[$a, $i]

--------------------------------------
指令:(L4) I80 :	 if_jump $i < 10   L3
#info[0]填入$i的活跃信息:true
#flag=true,$i在此指令前是否活跃?:true
#$i的下一次使用位置:80

--------------------------------------
指令:(L4) I80 :	 if_jump $i < 10   L3
arg1:$i,active:true
result:L3,active:false
nextUsed:-1
Exit:[]

--------------------------------------
指令:     I50 :	 ret

--------------------------------------
指令:     I49 :	 t22 = call @printf
#info[2]填入t22的活跃信息:false
#flag=false,t22在此指令前是否活跃?:false
#指令     I49 :	 t22 = call @printf的下一次使用:-1

--------------------------------------
指令:     I85 :	 param "a[0][i]=%d\n"

--------------------------------------
指令:     I84 :	 param t21
#info[0]填入t21的活跃信息:true
#flag=true,t21在此指令前是否活跃?:true
#t21的下一次使用位置:84

--------------------------------------
指令:     I83 :	 t21 = $a[t19]
#info[2]填入t21的活跃信息:true
#flag=false,t21在此指令前是否活跃?:false
#指令     I83 :	 t21 = $a[t19]的下一次使用:-1
#info[0]填入$a的活跃信息:false
#flag=true,$a在此指令前是否活跃?:true
#$a的下一次使用位置:83
#info[1]填入t19的活跃信息:false
#flag=true,t19在此指令前是否活跃?:true
#t19的下一次使用位置:83

--------------------------------------
指令:     I82 :	 t19 = $i * 4
#info[2]填入t19的活跃信息:true
#flag=false,t19在此指令前是否活跃?:false
#指令     I82 :	 t19 = $i * 4的下一次使用:-1
#info[0]填入$i的活跃信息:false
#flag=true,$i在此指令前是否活跃?:true
#$i的下一次使用位置:82

--------------------------------------
指令:     I43 :	 t18 = call @printf
#info[2]填入t18的活跃信息:false
#flag=false,t18在此指令前是否活跃?:false
#指令     I43 :	 t18 = call @printf的下一次使用:-1

--------------------------------------
指令:     I81 :	 param "hello,out of loops\n"

--------------------------------------
指令:     I81 :	 param "hello,out of loops\n"
nextUsed:-1

--------------------------------------
指令:     I43 :	 t18 = call @printf
result:t18,active:false
nextUsed:-1

--------------------------------------
指令:     I82 :	 t19 = $i * 4
arg1:$i,active:false
result:t19,active:true
nextUsed:83

--------------------------------------
指令:     I83 :	 t21 = $a[t19]
arg1:$a,active:false
arg2:t19,active:false
result:t21,active:true
nextUsed:84

--------------------------------------
指令:     I84 :	 param t21
arg1:t21,active:true
nextUsed:-1

--------------------------------------
指令:     I85 :	 param "a[0][i]=%d\n"
nextUsed:-1

--------------------------------------
指令:     I49 :	 t22 = call @printf
result:t22,active:false
nextUsed:-1

--------------------------------------
指令:     I50 :	 ret
nextUsed:-1
Exit:[$a]
Exit:[]
Exit:[]

--------------------------------------
指令:     I51 :	 exit

--------------------------------------
指令:     I51 :	 exit
nextUsed:-1
